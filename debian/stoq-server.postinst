#!/bin/sh

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
        # Make sure stoqserver's home exists
        mkdir -p /usr/share/stoqserver

        # Try to find the stoq database
        if [ -d "/var/run/postgresql" ]; then
            for socket in `find /var/run/postgresql -regex '.*\.s\.PGSQL\.[0-9]+'`; do
                PORT="`echo $PORT | sed -e 's/\(.*\.\)\([0-9]\+\)/\2/' | xargs`"
                [ -z "$PORT" ] && continue
                set +e
                # TODO: Improve code when we find more than one database candidates
                DBNAME=`sudo -u postgres psql -p $PORT -AtqwlF \| | cut -d \| -f 1 | grep stoq | head -n1`
                set -e
                [ ! -z "$DBNAME" ] && break
            done
        fi

        # If the process above failed for some reason, use the default 5432
        if [ -z "$PORT" ]; then
            PORT="5432"
        fi
        if [ -z "$DBNAME" ]; then
            DBNAME="stoq"
        fi

        # Create .stoq dir and configuration if they don't exist
        if [ ! -f /usr/share/stoqserver/.stoq/stoq.conf ]; then
            mkdir -p /usr/share/stoqserver/.stoq
            cat <<EOF > /usr/share/stoqserver/.stoq/stoq.conf
[General]
logfile = /usr/share/stoqserver/.stoq/stoqserver.log

[Database]
rdbms = postgres
address = 
port = $PORT
dbname = $DBNAME
dbusername = stoqserver

[Backup]
key = 
EOF
        fi

        # Create the stoqserver dbuser on postgresql if it doesn't exist
        HAS_USER_QUERY="SELECT usename FROM pg_user WHERE usename = 'stoqserver';"
        set +e
        HAS_USER="`sudo -u postgres psql -p $PORT -c "$HAS_USER_QUERY" | grep -c $USERNAME`"
        set -e
        if [ "$HAS_USER" != "1" ]; then
            sudo -u postgres createuser -p $PORT -dsR stoqserver || true
        fi

        # Create a .pgpass file stoqserver
        if [ ! -f /usr/share/stoqserver/.pgpass ]; then
            PG_PASSWORD="`cat /dev/urandom | tr -dc _A-Z-a-z-0-9 | head -c32`"
            sudo -u postgres psql -p $PORT -c \
                "ALTER USER stoqserver WITH PASSWORD '$PG_PASSWORD';" || true
            echo "*:*:*:stoqserver:$PG_PASSWORD" > /usr/share/stoqserver/.pgpass
            chmod 0600 /usr/share/stoqserver/.pgpass
        fi

        # Create stoqserver user if it doesn't exist
        if ! id stoqserver > /dev/null 2>&1 ; then
            adduser --system --home /usr/share/stoqserver --no-create-home \
                --group --disabled-password --quiet --shell /bin/bash \
                stoqserver
        fi

        if [ ! -f /usr/share/stoqserver/.ssh/id_rsa ]; then
            # Create a ssh key for stoqserver
            mkdir -p /usr/share/stoqserver/.ssh
            ssh-keygen -t rsa -N "" -f /usr/share/stoqserver/.ssh/id_rsa
        fi

        # Fix directory permissions
        chown -R stoqserver:stoqserver /usr/share/stoqserver || true

        # FIXME: supervisor is not being enabled by default on xenial (probably
        # something related to systemd). Until we discover what is going on,
        # enable it by hand here or else stoqserver will never run
        systemctl enable supervisor.service || true
        systemctl start supervisor.service || true

        # Add stoqserver on dialout group so it can interact with usb/serial devices
        adduser stoqserver dialout || true

        # Restart the supervisor process. We should be using reread here,
        # but it doesn't seem to recognize new services, just modifications
        # to existing ones.
        supervisorctl update || true
        # Update usually would be enough, but we want to make sure that
        # the daemon will restart in case the code changed
        supervisorctl restart stoqserver || true

        # Fix bundle's virtualenv symbolic links
        ln -fs /usr/bin/python3 /usr/lib/stoq-virtualenv/bin/python || true
        ln -fs /usr/lib/stoq-virtualenv/bin/python /usr/lib/stoq-virtualenv/bin/python3 || true
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
